3. 형변환
3.1. 형변환(캐스팅, casting)이란?
모든 연산은 기본적으로 같은 타입의 피연산자(operand)간에만 수행될 수 있으므로, 서로 다른 타입의 피연산자간의 연산을 수행해야하는 경우
연산을 수행하기 전에 형변환을 통해 같은 타입으로 변환해주어야 한다.

* 변수 또는 리터럴의 타입을 다른 타입으로 변환하는 것이다.

3.2 형변환 방법
(타입)피연산자
int score = (int)85.4; // double형 값을 int형으로 변환하여 score에 85가 저장된다.
byte b = (byte) score; // score에 저장된 값을 byte형으로 변환하여 byte에 저장.
여기에 사용되는 괄호는 '캐스트 연산자' 또는 '형변환 연산자' 라고 하며, 형변환을 '캐스팅(casting)' 이라고도 한다.

예제2-7 CastingEx1.java
class CastingEx1
{
  public static void main(String[] args)
    {
      double d = 100.0;
      int i = 100;
      int result = i + (int)d;

      System.out.println("d=" + d);
      System.out.println("i=" + i);
      System.out.println("result=" + result);
    }
}

3.3 기본형의 형변환

변환	        수식	        결과
int -> char	    (char)65	    'A'
char -> int	    (int)'A'	    65
float -> int	(int) 1.6f	    1
int -> float	(float)10	    10.0f

******************************************************************************************************************************
boolean을 제외한 나머지 7개의 기본형은 서로 헝변환이 가능하다.
기본형과 참조형은 서로 헝변환할 수 없다.
서로 다른 타입의 변수간의 연산은 형변환을 하는 것이 원칙이지만, 값의 범위가 작은 타입에서 큰 타입으로의 형변환은 생략할 수 있다.
******************************************************************************************************************************

